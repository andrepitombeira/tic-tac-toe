package jogodavelha;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import pattern.SingletonAreaInfo;
import pattern.SingletonConexao;
import pattern.SingletonContadores;
import pattern.SingletonPainelTabuleiro;
import protocolo.Mensagens;
import sockets.cliente.ClienteDeJogo;
import sockets.servidor.ServidorDeJogo;

public class JogoDaVelhaView extends FrameView {

    public JogoDaVelhaView(SingleFrameApplication app) {
        super(app);

        initComponents();

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.getFrame().setLocation(dim.width/2-this.getFrame().getWidth()/2, dim.height/2-this.getFrame().getHeight()/2);

        SingletonPainelTabuleiro.inicializar((Tabuleiro) painelDeDesenho);
        SingletonContadores.inicializar(tfVitorias, tfDerrotas, tfEmpates);
        SingletonAreaInfo.inicializar(areaInfo);

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = JogoDaVelhaApp.getApplication().getMainFrame();
            aboutBox = new JogoDaVelhaAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        JogoDaVelhaApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        painelDeAbas = new javax.swing.JTabbedPane();
        painelDeDesenho = new jogodavelha.Tabuleiro();
        painelDeInfo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaInfo = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfVitorias = new javax.swing.JTextField();
        tfEmpates = new javax.swing.JTextField();
        tfDerrotas = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        menuCriarServidor = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuComoJogar = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        painelDeAbas.setMinimumSize(new java.awt.Dimension(300, 300));
        painelDeAbas.setName("painelDeAbas"); // NOI18N

        painelDeDesenho.setMaximumSize(new java.awt.Dimension(300, 300));
        painelDeDesenho.setMinimumSize(new java.awt.Dimension(300, 300));
        painelDeDesenho.setName("painelDeDesenho"); // NOI18N
        painelDeDesenho.setPreferredSize(new java.awt.Dimension(300, 300));
        painelDeDesenho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelDeDesenhoMouseClicked(evt);
            }
        });
        painelDeDesenho.setLayout(new java.awt.BorderLayout());
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(jogodavelha.JogoDaVelhaApp.class).getContext().getResourceMap(JogoDaVelhaView.class);
        painelDeAbas.addTab(resourceMap.getString("painelDeDesenho.TabConstraints.tabTitle"), painelDeDesenho); // NOI18N

        painelDeInfo.setName("painelDeInfo"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        areaInfo.setColumns(20);
        areaInfo.setEditable(false);
        areaInfo.setLineWrap(true);
        areaInfo.setRows(5);
        areaInfo.setAutoscrolls(true);
        areaInfo.setName("areaInfo"); // NOI18N
        jScrollPane1.setViewportView(areaInfo);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelDeInfoLayout = new javax.swing.GroupLayout(painelDeInfo);
        painelDeInfo.setLayout(painelDeInfoLayout);
        painelDeInfoLayout.setHorizontalGroup(
            painelDeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDeInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))
                .addContainerGap())
        );
        painelDeInfoLayout.setVerticalGroup(
            painelDeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelDeInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        painelDeAbas.addTab(resourceMap.getString("painelDeInfo.TabConstraints.tabTitle"), painelDeInfo); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        tfVitorias.setEditable(false);
        tfVitorias.setText(resourceMap.getString("tfVitorias.text")); // NOI18N
        tfVitorias.setName("tfVitorias"); // NOI18N

        tfEmpates.setEditable(false);
        tfEmpates.setText(resourceMap.getString("tfEmpates.text")); // NOI18N
        tfEmpates.setName("tfEmpates"); // NOI18N

        tfDerrotas.setEditable(false);
        tfDerrotas.setText(resourceMap.getString("tfDerrotas.text")); // NOI18N
        tfDerrotas.setName("tfDerrotas"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelDeAbas, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addComponent(tfVitorias, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfEmpates, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDerrotas, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(painelDeAbas, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfVitorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tfEmpates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(tfDerrotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        menuCriarServidor.setText(resourceMap.getString("menuCriarServidor.text")); // NOI18N
        menuCriarServidor.setName("menuCriarServidor"); // NOI18N
        menuCriarServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCriarServidorActionPerformed(evt);
            }
        });
        fileMenu.add(menuCriarServidor);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        menuComoJogar.setText(resourceMap.getString("menuComoJogar.text")); // NOI18N
        menuComoJogar.setName("menuComoJogar"); // NOI18N
        menuComoJogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuComoJogarActionPerformed(evt);
            }
        });
        fileMenu.add(menuComoJogar);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(jogodavelha.JogoDaVelhaApp.class).getContext().getActionMap(JogoDaVelhaView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void painelDeDesenhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelDeDesenhoMouseClicked

        int x = evt.getX();
        int y = evt.getY();
        if(SingletonConexao.getNome().trim().equals(Mensagens.XIS)){
            if (x >= 20 && x <= 100 && y >= 20 && y <= 100) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_1_1);
            } else if (x >= 110 && x <= 190 && y >= 20 && y <= 100) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_1_2);
            } else if (x >= 200 && x <= 280 && y >= 20 && y <= 100) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_1_3);
            } else if (x >= 20 && x <= 100 && y >= 110 && y <= 190) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_2_1);
            } else if (x >= 110 && x <= 190 && y >= 110 && y <= 190) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_2_2);
            } else if (x >= 200 && x <= 280 && y >= 110 && y <= 190) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_2_3);
            } else if (x >= 20 && x <= 100 && y >= 200 && y <= 280) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_3_1);
            } else if (x >= 110 && x <= 190 && y >= 200 && y <= 280) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_3_2);
            } else if (x >= 200 && x <= 280 && y >= 200 && y <= 280) {
                SingletonConexao.enviarMensagem(Mensagens.XIS_3_3);
            }
        } else if(SingletonConexao.getNome().trim().equals(Mensagens.BOLA)){
            if (x >= 20 && x <= 100 && y >= 20 && y <= 100) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_1_1);
            } else if (x >= 110 && x <= 190 && y >= 20 && y <= 100) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_1_2);
            } else if (x >= 200 && x <= 280 && y >= 20 && y <= 100) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_1_3);
            } else if (x >= 20 && x <= 100 && y >= 110 && y <= 190) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_2_1);
            } else if (x >= 110 && x <= 190 && y >= 110 && y <= 190) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_2_2);
            } else if (x >= 200 && x <= 280 && y >= 110 && y <= 190) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_2_3);
            } else if (x >= 20 && x <= 100 && y >= 200 && y <= 280) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_3_1);
            } else if (x >= 110 && x <= 190 && y >= 200 && y <= 280) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_3_2);
            } else if (x >= 200 && x <= 280 && y >= 200 && y <= 280) {
                SingletonConexao.enviarMensagem(Mensagens.BOLA_3_3);
            }
        } else
            JOptionPane.showMessageDialog(null, "NÁO HÁ CONEXÃO!!!");

        //painelDeDesenho.paint(painelDeDesenho.getGraphics());

    }//GEN-LAST:event_painelDeDesenhoMouseClicked

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        new ConectarJogo();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void menuCriarServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCriarServidorActionPerformed
        Thread t = new ServidorDeJogo();
        t.start();

        new ClienteDeJogo().iniciarConexao("127.0.0.1");
    }//GEN-LAST:event_menuCriarServidorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SingletonAreaInfo.limpar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        SingletonConexao.enviarMensagem(Mensagens.FINALIZAR_TRANSMISSAO);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void menuComoJogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuComoJogarActionPerformed
        // TODO add your handling code here:
        new ComoJogar();
    }//GEN-LAST:event_menuComoJogarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaInfo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuComoJogar;
    private javax.swing.JMenuItem menuCriarServidor;
    private javax.swing.JTabbedPane painelDeAbas;
    private javax.swing.JPanel painelDeDesenho;
    private javax.swing.JPanel painelDeInfo;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTextField tfDerrotas;
    private javax.swing.JTextField tfEmpates;
    private javax.swing.JTextField tfVitorias;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
